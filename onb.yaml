openapi: 3.0.0
info:
  version: 7.0-SNAPSHOT
  title: ONB API
  description: ONB API
paths:
  /catalogs/{catalogCode}:
    get:
      description: >
        Return all catalog values for the given catalog.

        Catalogs can be filtered by any column in catalog table, by specifying
        it as parameter with value.
      summary: List of catalog values
      tags:
        - Catalogs
      parameters:
        - name: catalogCode
          in: path
          required: true
          description: Code of the catalog
          schema:
            type: string
        - name: order
          in: query
          required: false
          description: >
            used to request catalog ordered by specified database column values in ascending order

            * text - catalog values will be ordered by label text

            * columnName - catalog values will be ordered by specified column name
          schema:
            type: string
        - name: additionalAttributes
          in: query
          required: false
          description: >-
            used to request catalog with additional attributes (all catalog columns)
          schema:
            type: boolean
      responses:
        '200':
          description: all catalog values for given catalog
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogValueResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
        default:
          description: ''
          content:
            application/json:
              schema: {}

  /application/initialize:
    get:
      description: >
        Initializes application with offerCode from external source and obtain it's applicationId. Also parses User-Agent header for SPB to
        detect source system
      summary: Initializes application
      tags:
        - Application
      parameters:
        - name: offerCode
          in: query
          required: true
          description: offer codeo
          schema:
            type: string
            example: 1234
        - name: commissionNumPartner
          in: query
          required: false
          description: ID of external partner
          schema:
            type: number
            example: 123456
        - name: commissionNumAgent
          in: query
          required: false
          description: ID of external agent
          schema:
            type: number
            example: 123456
        - name: channelCode
          in: query
          required: false
          description: Channel of the caller based on the codelist CHANNEL
          default: RBCZ_PWB_ONB
          schema:
            type: string
            example: RBCZ_PWB_ONB
        - bldSavingAmt:
          in: query
          required: false
          description: Amount for building saving to request, when filled, bldSavingStateAid should be also sent
          schema:
            type: number
            format: decimal
            example: 1.0
        - bldSavingStateAid:
          in: query
          required: false
          description: Boolean flag if user has requested state support aid or not, when filled bldSavingAmt should be also sent
          schema:
            type: boolean
            example: true
        - data:
          in: query
          required: false
          description: Encrypted data using AES-CCM encoded in base64, contain metadata and numberPart2 to be used as comissionNumAgent
          schema:
            type: string
            example: ab45651654e5646465a4646b4
      responses:
        '200':
          description: all catalog values for given catalog
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ApplicationInitializeResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/lead:
    post:
      description: >
        Submits form except mobilePhone number, new party is created, opportunity, existence of client is checked etc.
      summary: Application first step
      tags:
        - Application
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationLeadRequest'
      responses:
        '200':
          description: all catalog values for given catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLeadResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/scan/init-sdk:
    get:
      description: >
        Returns string required for a correct function of mobile and Web SDK.
      summary: Initialization of mobile and Web SDK
      tags:
        - Application, ZenId
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: token
          description: >
            Challenge token generated by SDK function.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response with key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInitSDKResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/scan/sample:
    post:
      description: >
        Uploads user sample file and performs OCR processing and various validations.
      summary: Uploads user sample
      tags:
        - Application, ZenId
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: sampleType
          description: >
            Type of the given file (document, selfie, etc)
          in: query
          required: true
          example: DOCUMENT_PICTURE
          schema:
            type: string
            enum:
              - DOCUMENT_PICTURE
              - DOCUMENT_VIDEO
              - SELFIE
        - name: documentRole
          description: >
            Type of the given document. This parameter is mandatory only for sampleType=DOCUMENT_PICTURE.
          in: query
          required: false
          example: IDENTITY_CARD
          schema:
            type: string
            enum:
              - IDENTITY_CARD
              - PASSPORT
              - DRIVERS_LICENCE
        - name: documentSide
          description: >
            Side of the given document. This parameter is mandatory only for sampleType=DOCUMENT_PICTURE.
            For the main passport page use value FRONT.
          in: query
          required: false
          example: FRONT
          schema:
            type: string
            enum:
              - FRONT
              - BACK
        - name: stepNumber
          description: Step number of the application process.
          in: query
          required: false
          example: 12
          schema:
            type: number
      responses:
        '200':
          description: Response with sample Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationScanSampleResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: Sample file to be uploaded
                  type: string
                  format: binary
              required:
                - file
  /application/scan/investigate:
    get:
      description: >
        Investigate applicant's uploaded samples and perform validations.
      summary: Investigate uploaded samples
      tags:
        - Application, ZenId
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: stepNumber
          description: Step number of the application process.
          in: query
          required: false
          example: 12
          schema:
            type: number
      responses:
        '200':
          description: Response with investigation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInvestigationResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/ocr-data:
    get:
      description: >
        Returns applicant's personal data from the OCR system.
      summary: Get OCR personal Data
      tags:
        - Application, ZenId
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      responses:
        '200':
          description: Response with OCR data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPersonalDataResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/personal-data:
    post:
      description: >
        Stores personal data which was changed (or just confirmed) by applicant
      summary: Store personal Data
      tags:
        - Application, Personal Data
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPersonalDataRequest'
      responses:
        '200':
          description: Data was successfully stored
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/mobility:
    post:
      description: >
        Handle mobility for old account transfer, if mobilityType is not specified, endpoint only shifts application to the next step
      summary: Store mobility info
      tags:
        - Application, Mobility
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobilityRequest'
      responses:
        '200':
          description: Data was successfully stored
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/personal-data/contact-address:
    post:
      description: >
        Stores applicant contact address
      summary: Store contact address
      tags:
        - Application, Contact address
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedContactAddress'
      responses:
        '200':
          description: Data was successfully stored
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/penny-payment:
    post:
      description: >
        Starts a penny payment process for the given account.
      summary: Starts a penny payment process
      tags:
        - Application, Penny payment
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PennyPaymentRequest'
      responses:
        '200':
          description: Response with payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PennyPaymentResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/context:
    post:
      description: >
        Set values from given key-value map into context - existing values are overwritten
      summary: Set new values to context
      tags:
        - Application, Context
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetApplicationContextRequest'
      responses:
        '200':
          description: Context was successfully updated
        '500':
          $ref: 'common.yaml#/components/responses/500'
    get:
      description: >
        Returns application context for possible recoverz of FE after browser refresh etc.
      summary: Get application context
      tags:
        - Application, Context
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      responses:
        '200':
          description: Response with application context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationContextResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/context/encrypted:
    post:
      description: >
        Set values from encrypted string (encrypted by CRM) into context - existing values are overwritten
      summary: Set new values to context
      tags:
        - Application, Context
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEncryptedApplicationContextRequest'
      responses:
        '200':
          description: Context was successfully updated
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/contract/precontract-documentation:
    post:
      description: >
        Sends pre-contract documentation to applicant's email address
      summary: Send pre-contract documentation
      tags:
        - Application, Contract
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      responses:
        '200':
          description: Documentation was successfully sent
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /common/address/suggest:
    post:
      description: >
        Find address suggestions based on given search string
      summary: Address suggestion
      tags:
        - Address
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestAddressRequest'
      responses:
        '200':
          description: address suggestions based on give search string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestAddressResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /common/log:
    post:
      description: >
        Log message to ONB log file with prefix "[FE-LOG-MSG]: "
      summary: Log message to log file
      tags:
        - Logging
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingRequest'
      responses:
        '200':
          description: empty response
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/document/prepare:
    post:
      description: >
        Reserves account number and creates contract proposal document
      summary: Create contract proposal document
      tags:
        - Application, Document
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - $ref: '#/components/parameters/DocumentTypeParam'
      responses:
        '200':
          description: ID of contract proposal document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractPrepareResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/kyc-aml:
    post:
      description: >
        Returns results of applicant AML/KYC checks.
      summary: AML/KYC checks
      tags:
        - Application
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicantCheckRequest'
      responses:
        '200':
          description: Response with results of applicant AML/KYC checks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantCheckResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/consent:
    post:
      description: >
        Stores applicant consent
      summary: Consents
      tags:
        - Application
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentStoreRequest'
      responses:
        '200':
          description: Consent successfully stored.
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/document/{documentId}/download':
    post:
      description: >-
        Starts download process of given document.
      summary: Download document.
      tags:
        - Application, Document
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: documentId
          in: path
          required: true
          description: the id of document to be downloaded, correspond to dmsId.
          schema:
            type: string
      responses:
        '200':
          description: OK with downloadId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadResponse'
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'
    get:
      description: >-
        Get the document directly as stream avoiding download manager
      summary: Download document directly
      tags:
        - Application, Document
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: documentId
          in: path
          required: true
          description: the id of document to be downloaded, correspond to dmsId.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                description: content of the file
                type: object
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /download/{downloadId}/status:
    get:
      description: Gets status of download process.
      summary: Get status
      tags:
        - Download manager
      operationId: Get status
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: downloadId
          in: path
          required: true
          description: download ID of file
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatusResponse'
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /download/{downloadId}/get-key:
    get:
      description: Gets download key
      summary: Get download key
      tags:
        - Download manager
      operationId: Get download key
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: downloadId
          in: path
          required: true
          description: download ID of file
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDownloadKeyResponse'
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /download/{downloadKey}/get-content:
    get:
      description: Method for getting file content for specified downloadKey
      summary: Get file content
      tags:
        - Download manager
      operationId: Get file content
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: downloadKey
          in: path
          required: true
          description: download key
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                description: content of the file
                type: string
                format: binary
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/init-mobile-token':
    post:
      description: >-
        Starts direct mobile token activation, which creates user in GAAS and initiates activation on PAS.
      summary: Start direct mobile token activation
      tags:
        - Application, MobileToken
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: operation
          in: query
          description: Operation for mobile activation, if we start activation or finish it
          required: true
          type: string
          enum:
            - INITIALIZE
            - FINALIZE
        - name: deviceId
          in: query
          description: Device ID of the mobile, required for operation=FINALIZE
          required: false
          type: string
      responses:
        '200':
          description: OK response with OTP and activationCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileTokenActivationResponse'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/entry:
    get:
      description: Method for getting identityId and application info using valid GAAS token issued for ONB
      summary: Entry application with valid GAAS token
      tags:
        - Application
      parameters:
        - $ref: 'common.yaml#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: OK response with identityId and application info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationEntryResponse'
        '400':
          description: input error - missing or malformed parameters
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/fop/check:
    get:
      description: >
        Checks ICO number and returns basic FOP data.
      summary: Check ICO number
      tags:
        - Application, FOP
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
        - name: ico
          in: query
          description: ICO number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response with FOP data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFOPDataResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'
  /application/personal-product:
    post:
      description: >
        Selects a FOP's personal account.
        If personal product is not selected (offerCode is null),
        then application will only be moved to the next step without a personal product.
      summary: Select FOP's personal account
      tags:
        - Application, FOP
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FOPPersonalAccountRequest'
      responses:
        '200':
          description: FOP's personal account was successfully selected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalProductInfo'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /applicant/address:
    get:
      description: >
        Finds all applicant's addresses
      summary: Get aplicant's addresses
      tags:
        - Applicant, Address
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      responses:
        '200':
          description: Response with addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantAddressResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/redirect:
    post:
      description: >
        Handles users decision whether to continue online or follow the offline ZUD process or process on branch. Optionally returns ZUD 
        redirect URL when ZUD redirect is chosen.
      summary: Handles decision whether to use ZUD or Branch process or continue in ONB
      tags:
        - Application
        - ZUD
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectProcessRequest'
      responses:
        '200':
          description: Response with redirect URL for ZUD or Branch process when user chooses it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectProcessResponse'
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

  /application/bankid/providers:
    get:
      summary: Gets a list of BankId providers from BAAPI
      description: Gets a list of BankId providers from BAAPI
      tags:
        - Application
        - BankId
      parameters:
        - $ref: 'common.yaml#/components/parameters/IdentityIdRequestParam'
      responses:
        '200':
          description: Response with list of allowed providers of BankId
          content:
            application/json:
              schema:
                items:
                  type: array
                  description: Collection of all allowed providers (banks)
                  items:
                    "$ref": "#/components/schemas/Provider"
        '400':
          $ref: 'common.yaml#/components/responses/400'
        '500':
          $ref: 'common.yaml#/components/responses/500'

servers:
  - url: /
components:
  parameters:
    DocumentTypeParam:
      name: documentType
      in: query
      description: Specifies document type, note that CONTRACT_PROPOSAL is used for both ACC_FO account and ACC_FOP personal account
      required: true
      example: CONTRACT_PROPOSAL
      schema:
        type: string
        enum:
          - CONTRACT_PROPOSAL
          - MOBILITY
          - BUSINESS_CONTRACT_PROPOSAL
  schemas:
    CatalogValueResponse:
      title: Catalog value
      type: object
      required:
        - code
        - texts
        - active
      properties:
        code:
          description: >-
            Primary key of the catalog entry. For code catalog it is equal to
            code. For time based catalog it is primary key of the catalog entry.
          type: string
          example: CZK
        texts:
          description: >-
            Map of catalog entry localized message in different languages. As a
            key the ISO code of language is used and value is the localized
            message
          type: object
          example: '{"cs":"Česká koruna","sk":"Česká koruna","en":"Czech Koruna"}'
        active:
          description: >-
            Status of the catalog, valid values are _true_ (active), _false_
            (deleted, not active)
          type: boolean
          example: true
        order:
          description: the order by requested db column values
          type: number
          format: int32
          example: 1
        additionalAttributes:
          description: flag used to return all columns from the catalog table

    ApplicationLeadRequest:
      title: Application lead request
      type: object
      required:
        - firstName
        - lastName
        - email
        - startedOnMobile
      properties:
        firstName:
          description: First name of applicant
          type: string
          x-asd-attribute: ACC_03_01
          example: Petr
        lastName:
          description: Last name of applicant
          type: string
          x-asd-attribute: ACC_03_02
          example: Novák
        email:
          description: Email of applicant
          type: string
          x-asd-attribute: ACC_03_03
          example: petr.novak@example.org
        startedOnMobile:
          description: Flag if user is creating application on mobile or not
          type: boolean
          example: true
    ApplicationLeadResponse:
      title: Application lead request
      type: object
      required:
        - applicationStatus
        - applicationSubStatus
      properties:
        applicationStatus:
          description: Application status based on catalog APPLICATIONSTATE
          type: string
          example: REJECTED
        applicationSubStatus:
          description: Application sub status based on catalog APPLICATIONSUBSTATE
          type: string
          example: REJECTED
        partyId:
          description: Unique identifier of private party in Siebel, not sent for redirect case
          type: string
        corpPartyId:
          description: Unique identifier of commecrial party in Siebel, if it was created, FOP only, not sent for redirect case
          type: string
        opportunityId:
          description: Id of opportunity in Siebel
          type: string
    ApplicationInitSDKResponse:
      title: Application init SDK
      type: object
      required:
        - key
      properties:
        key:
          description: >
            Key required for a correct function of mobile and Web SDK
          type: string
          example: iO1q4HfUYESRO6XDMhcQiVs/qno5EX35oxWqzsPRtIhCHCqPQ6PsSdLbiTeCtbz94phTAtMdbmdnCMTgVfFkcgEWdJDiu2A5q9q=
    ApplicationScanSampleResponse:
      title: Application scan response
      type: object
      required:
        - sampleId
      properties:
        sampleId:
          description: Id of the successfully uploaded sample
          type: string
          example: 61201f0a-e127-4bed-973d-ad874b3d9281
    ApplicationInvestigationResponse:
      title: Application investigation response
      type: object
      required:
        - investigationResult
        - escalation
      properties:
        investigationResult:
          description: Result of the investigation
          type: string
          enum:
            - OK
            - OK_UNCERTAIN
            - NOK_UNCERTAIN
            - NOK
          example: OK_UNCERTAIN
        escalation:
          description: Flag if escalation occurs
          type: boolean
          example: true

    SetApplicationContextRequest:
      title: Set application context request
      type: object
      required:
        - context
      properties:
        context:
          description: Key value map of values to be put into context
          type: object
          additionalProperties: true

    SetEncryptedApplicationContextRequest:
      title: Set encrypted application context request
      type: object
      required:
        - data
      properties:
        data:
          description: Encrypted string containing JSON data from CRM, encryption using AES-256 CBC mode with PKCSK5 padding
          type: string

    ApplicationContextResponse:
      title: Application context response
      type: object
      required:
        - startedOnMobile
        - applicationStatus
        - applicationSubStatus
        - commissionNumPartner
        - clientIpAddress
        - utcDateTime
        - initUserAgent
        - applicationType
        - additionalPersonalAccount
        - additionalBuildingSaving
        - context
      properties:
        startedOnMobile:
          description: Flag if user started on mobile
          type: boolean
          example: true
        applicationStatus:
          description: Application status based on catalog APPLICATIONSTATE
          type: string
          example: REJECTED
        applicationSubStatus:
          description: Application sub status based on catalog APPLICATIONSUBSTATE
          type: string
          example: REJECTED
        commissionNumPartner:
          description: ID of external partner
          type: number
          example: 123456
        commissionNumAgent:
          description: ID of external agent
          type: number
          example: 123456
        clientIpAddress:
          description: client's IP address obtained from X-Forwarded-For header
          type: string
        partyId:
          description: Party ID from Siebel for private party (FO, FOP)
          type: string
          example: d546d46s
        corpPartyId:
          description: Party ID from Siebel for commercial party (FOP, PO)
          type: string
          example: d546d46s
        opportunityId:
          description: Opportunity ID from Siebel
          type: string
          example: 231564
        utcDateTime:
          description: current server date-time in UTC time zone
          type: string
          format: date
        initUserAgent:
          description: User agent header from when user entered the application
          type: string
        mobility:
          $ref: '#/components/schemas/Mobility'
        applicationType:
          $ref: 'common.yaml#/components/schemas/ApplicationTypeProperty'
        additionalPersonalAccount:
          description: Flag if user has also chosen to create personal account additional to corporate one - specific to FOP
          type: boolean
          example: false
        additionalBuildingSaving:
          description: Flag if user has active building saving
          type: boolean
          example: false
        context:
          type: object
          additionalProperties: true
        apsApplicationId:
          description: ID of application in APS system
          type: string
          example: 123
    MobilityRequest:
      title: Mobility request
      type: object
      required:
        - mobilityType
      properties:
        accountNumPrefix:
          description: The account number prefix, required when mobilityType specified
          type: string
          example: 123
        accountNumber:
          description: The account number without prefix, required when mobilityType specified
          type: string
          example: 4564
        bankCode:
          description: The Bank code
          type: string
          example: 6210
        mobilityType:
          description: Type of mobility chosen by applicant or NONE when skipping mobility
          type: string
          enum:
            - FULL
            - PARTIAL
            - NONE
        transferDate:
          description: Date when the transfer of old account should occur, required when mobilityType specified
          type: string
          format: date
          example: '2015-08-27'
    PennyPaymentRequest:
      type: object
      required:
        - accountNumber
        - bankCode
      properties:
        accountNumPrefix:
          description: The account number prefix
          type: string
          example: 123
        accountNumber:
          description: The account number without prefix
          type: string
          example: 4564
        bankCode:
          description: The Bank code
          type: string
          example: 6210
    PennyPaymentResponse:
      $ref: '#/components/schemas/PennyPayment'
    ApplicationPersonalDataRequest:
      title: Personal data confirmed by the applicant
      type: object
      properties:
        firstName:
          description: First name
          type: string
          example: Jan
        lastName:
          description: Last name
          type: string
          example: Novak
        birthPlace:
          description: Birth place
          type: string
          example: Praha 8
        birthNumber:
          description: Birth number
          type: string
          example: 831217/4509
        birthDate:
          description: Birth date, deprecated, parsed from birthNumber
          type: string
          format: date
          example: '1975-08-27'
        birthCountry:
          description: 'Birth country ISO code (CATALOG: Countries)'
          type: string
          x-catalog: Countries
          example: 'CZ'
        gender:
          description: Gender, deprecated, parsed from birthNumber
          type: string
          enum:
            - MALE
            - FEMALE
          example: MALE
        permanentAddress:
          $ref: '#/components/schemas/Address'
        contactAddress:
          $ref: '#/components/schemas/Address'
        documents:
          description: Available documents
          items:
            $ref: '#/components/schemas/DocumentData'
    FOPPersonalAccountRequest:
      title: FOP personal account request
      type: object
      properties:
        offerCode:
          description: offer code
          type: string
          example: 1234
    ApplicationFOPDataResponse:
      title: Response with FOP basic data
      type: object
      properties:
        firstName:
          description: First name
          type: string
          example: Jan
        lastName:
          description: Last name
          type: string
          example: Novak
        businessName:
          description: Business name
          type: string
          example: Ing. Jan Novak
        businessAddress:
          $ref: '#/components/schemas/Address'
    PersonalProductInfo:
      title: Personal product info - IDs of created Siebel objects
      type: object
      properties:
        opportunityId:
          description: opportunity ID of the siebel entity for specific personal product
          type: string
          example: 123
        sblApplicationId:
          description: application ID of the siebel entity for specific personal product
          type: string
          example: 123
    ApplicationPersonalDataResponse:
      title: Personal data confirmed by the applicant
      type: object
      properties:
        firstName:
          description: First name
          type: string
          example: Jan
        lastName:
          description: Last name
          type: string
          example: Novak
        birthPlace:
          description: Birth place
          type: string
          example: Praha 8
        birthNumber:
          description: Birth number
          type: string
          example: 831217/4509
        birthDate:
          description: Birth date
          type: string
          format: date
          example: '1975-08-27'
        birthCountry:
          description: 'Birth country ISO code (CATALOG: Countries)'
          type: string
          x-catalog: Countries
          example: 'CZ'
        gender:
          description: Gender
          type: string
          enum:
            - MALE
            - FEMALE
          example: MALE
        permanentAddress:
          $ref: '#/components/schemas/Address'
        contactAddress:
          $ref: '#/components/schemas/Address'
        documents:
          description: Available documents
          items:
            $ref: '#/components/schemas/DocumentOCRData'
        ocrAlerts:
          title: Applicant's personal data from OCR system
          type: object
          properties:
            ocrAlerts:
              type: object
              properties:
                firstName:
                  description: First name OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                lastName:
                  description: Last name OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                birthPlace:
                  description: Birth place OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                birthNumber:
                  description: Birth number OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                birthDate:
                  description: Birth date OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                birthCountry:
                  description: Birth country OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                gender:
                  description: Gender OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN
                permanentAddress:
                  description: Premanent address OCR warning
                  type: string
                  enum:
                    - WARN
                  example: WARN

    Address:
      description: Address
      type: object
      required:
        - city
        - number
        - postalCode
      properties:
        city:
          description: city
          type: string
          example: Praha
        street:
          description: street
          type: string
          example: Malostranska
        number:
          description: house and street number
          type: string
          example: 45/6
        postalCode:
          description: postal code
          type: string
          example: 25072
    ExtendedContactAddress:
      description: Contact address with additional info
      type: object
      allOf:
        - $ref: '#/components/schemas/Address'
      properties:
        additionalInfo:
          description: Address additional info
          type: string
          example: flat number 5
    ApplicantAddress:
      description: Applicant Address
      type: object
      allOf:
        - $ref: '#/components/schemas/Address'
      required:
        - addressType
        - preferred
      properties:
        addressType:
          description: Applicant address type
          type: string
          enum:
            - PERMANENT
            - CONTACT
            - BUSINESS
        preferred:
          description: flag if address is preferred
          type: boolean
          example: true
    ApplicantAddressResponse:
      description: Applicant Address find response
      type: object
      required:
        - addresses
      properties:
        addresses:
          description: Applicant address type
          type: array
          items:
            $ref: '#/components/schemas/ApplicantAddress'
        permanentSameAsBusiness:
          description: flag if permanent address is the same permanent, if present
          type: boolean
          example: true
    Mobility:
      description: User's input for mobility
      type: object
      required:
        - accountNumPrefix
        - accountNumber
        - bankCode
        - mobilityType
        - transferDate
      properties:
        accountNumPrefix:
          description: The account number prefix
          type: string
          example: 123
        accountNumber:
          description: The account number without prefix
          type: string
          example: 4564
        bankCode:
          description: The Bank code
          type: string
          example: 6210
        mobilityType:
          description: Type of mobility chosen by applicant
          type: string
          enum:
            - FULL
            - PARTIAL
        transferDate:
          description: Date when the transfer of old account should occur
          type: string
          format: date
          example: '2015-08-27'
    DocumentData:
      description: Documents data
      type: object
      required:
        - role
        - number
        - expiryDate
        - issueDate
        - authority
      properties:
        role:
          description: Document role which determines type of document
          type: string
          enum:
            - IDENTITY_CARD
            - PASSPORT
            - DRIVERS_LICENCE
          example: IDENTITY_CARD
        number:
          description: Document number
          type: string
          example: E42507
        issueDate:
          description: 'Date when the document was issued'
          type: string
          format: date
          example: '2015-08-27'
        expiryDate:
          description: 'Date when the document will expire'
          type: string
          format: date
          example: '2025-08-27'
        authority:
          description: 'Local authority that issued the document'
          type: string
          format: date
          example: 'Magistrat mesta Usti nad Labem'
    DocumentOCRData:
      allOf:
        - $ref: '#/components/schemas/DocumentData'
      properties:
        ocrAlerts:
          type: object
          properties:
            role:
              description: Document role OCR warning
              type: string
              enum:
                - WARN
              example: WARN
            number:
              description: Document number OCR warning
              type: string
              enum:
                - WARN
              example: WARN
            issueDate:
              description: Document issue date OCR warning
              type: string
              enum:
                - WARN
              example: WARN
            expiryDate:
              description: Document expiration date OCR warning
              type: string
              enum:
                - WARN
              example: WARN
            authority:
              description: Local authority OCR warning
              type: string
              enum:
                - WARN
              example: WARN

    SuggestAddressRequest:
      title: Request for address suggestions
      type: object
      required:
        - searchString
      properties:
        searchString:
          description: Search string containing whole address or some part
          type: string
          example: Trojanova 13
        maxResults:
          description: Maximum results for suggestion, default is 5
          type: number
          example: 10
    SuggestAddressResponse:
      title: Suggest addresses response
      type: object
      required:
        - addresses
      properties:
        addresses:
          description: >-
            The collection of suggested addresses, can be empty if no addresses are found
          type: array
          items:
            $ref: '#/components/schemas/addr'
    LoggingRequest:
      title: Request for loging message into ONB lgo file
      type: object
      required:
        - level
        - message
      properties:
        level:
          description: Level of the log message
          type: string
          enum:
            - TRACE
            - DEBUG
            - INFO
            - WARN
            - ERROR
        message:
          description: Message to be logged - message will prefixed with special prefix to better parse such a messages
          type: string
          example: Some error occured during initialization of zenId
    addr:
      description: The DTO object representing address.
      type: object
      properties:
        id:
          description: the ID of address contact
          type: string
          example: 101
        street:
          description: the street
          type: string
          example: Hvezdova
        number:
          description: the number
          type: string
          example: 127
        city:
          description: the city
          type: string
          example: Prague
        postalCode:
          description: the postal code
          type: string
          example: 14000
        country:
          description: 'the country (ISO format, e.g. CZ)'
          type: string
          example: CZ

    ApplicantCheckRequest:
      title: Applicant check request
      type: object
      required:
        - taxResidency
        - pepStatus
        - transactionVolume
        - mostFrequentTransactionType
      properties:
        taxResidency:
          description: 'Tax residency country id'
          x-asd-attribute: ACC_12_002
          type: string
          example: CZ
        pepStatus:
          description: 'PEP status (answerId)'
          x-asd-attribute: ACC_12_003
          type: number
          example: 1
        transactionVolume:
          description: 'Expected transaction volume (answerId)'
          x-asd-attribute: ACC_12_004
          type: number
          example: 1
        mostFrequentTransactionType:
          description: 'Most frequent transaction type (answerId)'
          x-asd-attribute: ACC_12_005
          type: number
          example: 1
        transactionVolumeCash:
          description: 'Expected transaction volume - cash (answerId)'
          x-asd-attribute: ACC_12_006
          type: number
          example: 1
        mostFrequentTransactionDestination:
          description: 'Most frequent transaction destinations (array of answerIds)'
          x-asd-attribute: ACC_12_007
          type: array
          items:
            type: number
        incomeType:
          description: 'Income type (array of answerIds)'
          x-asd-attribute: ACC_12_008
          type: array
          items:
            type: number
        fundsSource:
          description: 'Sources of funds (array of answerIds)'
          x-asd-attribute: ACC_12_09
          type: array
          items:
            type: number
        mainFundsSource:
          description: 'Main source of funds (answerId)'
          x-asd-attribute: ACC_12_011
          type: number
          example: 1
        customFundsSource:
          description: 'Custom source of funds'
          type: string
          example: 'abc'
        profession:
          description: 'Profession (answerId)'
          type: number
          example: 1
        clientType:
          description: 'FOP client type (answerId)'
          x-asd-attribute: ACM_15_007
          type: number
          example: 1
        rbMainBank:
          description: 'Main bank for business (answerId)'
          x-asd-attribute: ACM_15_008
          type: number
          example: 1
        rbBankForSales:
          description: 'Main bank for payment of sales (answerId)'
          x-asd-attribute: ACM_15_009
          type: number
          example: 1
        rbBankForTaxes:
          description: 'Main bank for payment of taxes (answerId)'
          x-asd-attribute: ACM_15_010
          type: number
          example: 1
        mainBusinessType:
          description: 'Business area (answerId), optional for FOP'
          x-asd-attribute: ACM_15_013
          type: number
          example: 1

    ApplicantCheckResponse:
      title: Applicant check response
      type: object

    ContractPrepareResponse:
      title: Contract proposal response
      type: object
      required:
        - documentId
      properties:
        documentId:
          description: 'ID of contract proposal document'
          type: string
          example: ABC

    DownloadResponse:
      description: Response with document downloadId
      type: object
      required:
        - downloadId
      properties:
        downloadId:
          description: the document download id
          type: number
          format: int64
          example: 5123
    GetStatusResponse:
      title: Get status response
      type: object
      properties:
        result:
          description: 'status of download process [DONE, IN_PROGRESS, ERROR]'
          type: string
          example: IN_PROGRESS
      required:
        - result
    GetDownloadKeyResponse:
      title: Get download key response
      type: object
      properties:
        downloadKey:
          description: Get download key
          type: string
      required:
        - downloadKey

    ConsentStoreRequest:
      title: Consent store request
      type: object
      properties:
        biometricDataConsent:
          description: Biometric data consent
          type: boolean
          x-asd-attribute: ACC_15_004
          example: true
        marketingConsent:
          description: Marketing consent
          type: boolean
          x-asd-attribute: ACC_15_005
          example: true

    MobileTokenActivationResponse:
      title: Mobile token activation response
      type: object
      properties:
        activationCode:
          description: activation code from PAS, required for operation=INITIALIZE
          type: string
        otp:
          description: Randomly generated 6 digits as a PIN/OTP for PAS, required for operation=FINALIZE
          type: string

    PennyPayment:
      title: Penny payment object with instructions
      type: object
      required:
        - accountFrom
        - accountTo
        - amount
        - dateTo
        - message
        - qrCode
        - qrCodeString
      properties:
        accountFrom:
          description: Payment debit account
          type: string
          example: 1213-45123/5500
        accountTo:
          description: Payment credit account
          type: string
          example: 1213-45123/5500
        amount:
          description: payment amount
          type: number
          format: decimal
          example: 1.0
        currencyId:
          description: Currency ISO code
          type: string
          example: CZK
        dateTo:
          description: payment due date - D+1
          type: string
          format: date
          example: '2020-12-10'
        message:
          description: Message for the recipient
          type: string
          example: Platba k aktivaci účtu v Raiffeisenbank, Petr Novak
        qrCode:
          description: Base 64 encoded QR code image with payment instruction
          type: string
          example: dsf456dsfsd4f4ds6fd4f6
        qrCodeString:
          description: String in SPAYD format representing payment, source for qrCode image
          type: string
          example: 'SPD*1.0*ACC:CZ5855000000001265098001*AM:480.50*CC:CZK*RF:7004139146*X'

    ApplicationEntryResponse:
      title: Application entry response
      type: object
      required:
        - identityId
        - applicationStatus
        - applicationSubStatus
      properties:
        identityId:
          description: IdentityId to be used in further REST API requests
          type: string
          example: aea56-deaf6-fad13-aaa15
        applicationStatus:
          description: Application status based on catalog APPLICATIONSTATE
          type: string
          example: REJECTED
        applicationSubStatus:
          description: Application sub status based on catalog APPLICATIONSUBSTATE
          type: string
          example: REJECTED
        pennyPayment:
          $ref: '#/components/schemas/PennyPayment'

    RedirectProcessRequest:
      title: Redirect process request for ZUD or branch
      type: object
      required:
        - redirectType
      properties:
        redirectType:
          description: Chosen type od redirect
          type: string
          enum:
            - ZUD
            - BRANCH
            - NONE
          example: ZUD

    RedirectProcessResponse:
      title: Redirect process response with optional redirect URL
      type: object
      properties:
        redirectUrl:
          description: redirect URL for offline selected process - ZUD or branch
          type: string

    Provider:
      type: object
      description: Provider (bank)
      required:
        - id
        - title
      properties:
        id:
          type: string
          description: Provider identifier
        title:
          type: string
          example: DesertIce Bank a.s.
          description: Human readable name of the bank
        description:
          type: string
          description: Human readable description of the bank
        logo:
          type: array
          items:
            "$ref": "#/components/schemas/Logo"
          description: List of different available logo sizes. SeP should decide which
            logo is most appropriate for their use case.
    Logo:
      type: object
      required:
        - id
        - url
        - width
        - height
      properties:
        id:
          type: string
          description: Unique identifier of bank logo
          example: BB23F99B-F5B8-4EB5-8BC1-93A3E1ED123B
        url:
          type: string
          format: uri
          description: Absolute URL of the logo image. Must not require any authentication
            to download, so that it can safely be used in an image tag.
          example: https://sonia.example.com/bank_images/BB23F99B-F5B8-4EB5-8BC1-93A3E1ED123B.png
        width:
          type: number
          description: Width of the logo image
          example: 256
        height:
          type: number
          description: Height of the logo image
          example: 256
